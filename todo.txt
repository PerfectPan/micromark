Go through:
- Probably also update `micromark-extension-math`?
- Probably also update `micromark-extension-directive`?

To do list:

* 1, misc: Add some extra extension tests
* 3, minor: Parse BOM as construct
* 3, minor: Use new `spaceOrTab` etc functions
* 5, minor: Add support for, in development mode, deprecation warnings
* 1, major: Remove `_gfmTableDynamicInterruptHack` field
* 1, major: Remove `_hiddenFootnoteSupport` field, add `_gfmFootnoteSupport` field
* 3, major: remove `.js` export, or even all export map entries? (except maybe `/stream`)?
* 5, major: parse list items separately
* 3, major: Do not use `space` in code (text), use resolver (see `Attachments` below)
* 8, major: Change type names to match `markdown-rs`
* 8, major: Change (doc, flow) constructs to handle their own indent
* 13, major: Change all resolvers, use edit map, register resolvers manually instead of in construct
* 13, major: Change tokenizer, codes, chunks, interrupt/lazy/pierce, new attempt/check algo, etc to match `markdown-rs`

Things to check:

* Perf: more tests: <https://github.com/commonmark/commonmark.js/issues/129>
* <https://github.com/commonmark/commonmark.js/blob/master/test/regression.txt>

Attachments:

## Remove `code-text` resolver

*   Remove `function resolveCodeText` in `code-text.js`
*   Remove `if (code === codes.space) {` case from `between`
*   Remove `code === codes.space` case from `data`
*   Remove `codeTextPadding` from `types.js`
*   Add `buffer()` at the end of `function onentercodetext` in `micromark/dev/lib/compile.js`
*   Add the following at the start of `function onexitcodetext`:

```js
const result = resume()
let trim = false
let index = 0

// Note: line endings have already been turned into spaces.
if (
  result.length > 2 &&
  result.codePointAt(index) === codes.space &&
  result.codePointAt(result.length - 1) === codes.space
) {
  while (++index < result.length - 1 && !trim) {
    if (result.codePointAt(index) !== codes.space) {
        trim = true
    }
  }
}

raw(trim ? result.slice(1, -1) : result)
```
